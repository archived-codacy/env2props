version: 2

# Re-usable blocks to reduce boilerplate in job definitions.
references:
  default_machine_job: &default_machine_job
    machine: true
    working_directory: ~/workdir

  set_version_env_variable: &set_version_env_variable
    run:
      name: Define Environment Variable VERSION_NUMBER and ENV at Runtime
      command: |
        echo export VERSION_NUMBER=$(cat ~/workdir/.version) >> $BASH_ENV
        source $BASH_ENV
        echo $VERSION_NUMBER

  install_crystal: &install_crystal
    run:
      name: Install Crystal
      command: |
        curl -sSL https://dist.crystal-lang.org/apt/setup.sh | sudo bash
        sudo apt-get update
        sudo apt-get install crystal libevent-core-2.0-5 libevent-dev libevent-extra-2.0-5 libevent-openssl-2.0-5 libevent-pthreads-2.0-5 libgmp-dev libgmpxx4ldbl libssl-dev libxml2-dev libyaml-dev libreadline-dev automake libtool git llvm libpcre3-dev build-essential -y

jobs:
  checkout_and_version:
    docker:
      - image: codacy/git-version:latest
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: Set version
          command: /bin/git-version > .version
      - run:
          name: Current version
          command: cat .version
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir

  compile:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Compile
          command: make clean buildStatic
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir/*
      - store_artifacts:
          path: bin

  test:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/
      - *install_crystal
      - run:
          name: Crystal version
          command: crystal --version
      - run:
          name: Test
          command: make test

  publish-github-release:
    docker:
      - image: circleci/golang:1.8
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=$(cat ~/workdir/.version)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ~/workdir/bin/

  changelog:
    docker:
      - image: biig/auto-changelog:1.11.0
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Generate Changelog
          command: auto-changelog
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir/*

  changelog_html:
    docker:
      - image: jpbernius/pandoc:latest
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Generate Changelog Html
          command: pandoc -f markdown -t html5 -o changelog.html CHANGELOG.md -c changelog/pandoc.css --self-contained
      - store_artifacts:
          path: CHANGELOG.md
          destination: CHANGELOG.md
      - store_artifacts:
          path: changelog.html
          destination: changelog.html

workflows:
  version: 2
  publish:
    jobs:
      - checkout_and_version
      - compile:
          requires:
            - checkout_and_version
      - test:
          requires:
            - compile
      - publish-github-release:
          requires:
            - test
          filters:
            branches:
              only:
              - master
          context: CodacyAWS
      - changelog:
          requires:
            - publish-github-release
      - changelog_html:
          requires:
            - changelog
